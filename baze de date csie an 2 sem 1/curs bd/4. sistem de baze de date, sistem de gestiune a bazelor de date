sgbd a devenit mai accesibil prin limbaje procedurale si neprocedurale
sgbd e un ansamblu complex de programe ce asigura interfata intre o bd si utilizatorii acesteia
sgbd/dbms 

Orice organizare a datelor in mem. externa in colectii de date care nu are un sgbd asociat nu conduce la un SBD ci la fisiere
sau sisteme de fisiere prelucrate cu programe

minim un sgbd contine
- un model de date pt bd
- un limbaj de programare si interfete/instrumente pt gestionarea optima a datelor

roluri sgbd
- defineste si descrie bd
- incarca/valideaza datele
- realizeaza accesul pt operatii ca interogarea, consulatarea, actualizarea, editarea si situatii de iesire
- intretine bd prin editoare, utilitare - shells, navigatoare, convertoare etc
- protejeaza bd sub aspectul securitatii si integritatii datelor
sgbd relationale: oracle, informix, db2, visual foxpro, access
sgbd oo: gemstone, o2, jasmine

limbaje de descriere a datelor(ldd)
limbaje de manipulare a datelor(lmd)
limbaje de regasire neprocedurale (sql)

caracteristici sgbd:
- imbunatatirea acc. la date prin acces dupa mai multe chei, acces concurent, cresterea securitatii datelor
- utilizarea sgbd-urilor anterioare impreuna cu noile generatii


functiile sgbd: manipulare, utilizare, descriere, administrare bd;

LDD e foarte important. Exemplu descriere:
PROMPT crearea tabelelor
DROP TABLE cleinti CASCADE CONSTRAINTS;
DROP TABLE furnizori CASCADE CONSTRAINTS;
DROP TABLE produse CASCADE CONSTRAINTS;
DROP TABLE tranzactii CASCADE CONSTRAINTS;
DROP TABLE documente CASCADE CONSTRAINTS;
DROP TABLE proddoc CASCADE CONSTRAINTS;
CREATE TABLE clienti
(
codc varchar2 (5),
denc varchar2 (30),
adr varchar2 (30),
loc varchar2 (20),
constraint pk_codc primary key (codc)
);
CREATE TABLE furnizori
(
codf varchar2 (5),
denf varchar2 (30),
adr varchar2 (30),
loc varchar2 (20),
constraint pk_codf primary key (codf)
);
CREATE TABLE tranzactii
(
codt varchar2 (5),
dent varchar2 (1),
constraint nn_dent not null
constraint ck_dent check (upper (dent) in('L','R')),
dataora date default sysdate,
codf varchar2 (5),
codc varchar2 (5),
constraint pk_codt primary key (codt),
constraint fk_codf foreign key (codf) references furnizori (codf),
constraint fk_codc foreign key (codc) references clienti (codc)
);
CREATE TABLE documente
(
codd number (5)
constraint ck_codd check (codd > 0),
dend varchar2 (4)
constraint nn_dend not null
constraint ck_dend check (upper (dend) in ('FACT', 'AVIZ', 'NIR', 'CHIT')),
data date default sysdate,
codt varchar2 (5),
constraint pk_codd primary key (codd),
constraint fk_codt foreign key (codt) references tranzactii (codt)
);

CREATE TABLE proddoc
(
codd number(5),
codp varchar2(5),
um varchar2(5),
cat number(5),
constraint pk_coddp primary key
(cadd,codp)
);

Manipularea datelor
-fct de manipulare e cea mai complexa; se face cu aj. limbajului de manipulare a datelor (LMD)
- LMD efectueaza incarcarea, actualizarea, prelucrarea si regasirea datelor
Actualizarea consta in ops. de adaugare, modif si stergere inregistrari. 
Prelucrarea consta in ops. de selectie, ordonare, interclasare(compunere) si ventilare
(descompunere). 
Regasirea(interogarea) consta in operatii de vizualizare (punctuale, liste, rapoarte, grafice,
imagini, sunet, video).

Ex. INCARCARE: Sa se introduca in tabela Pontaj datele pentru noul angajat:
SQL > PROMPT
INSERT INTO Pontaj
(codang, luna, zilelucr, orezi, zileco, zilecm, orelucrate)
VALUES
('&CodAngajat, '&LunaPontaj', '&ZileLucr', '&ZileLucr', '&OrePeZi',
'&ZileConOdihna','&ZileConMed',' &OreLucrEfectiv');

Ex. ACTUALIZARE: Adaugati tabelei Proddoc, Restrictia de validare (cand >= 50)
SQL > PROMPT

ALTER TABLE proddoc ADD
(CONSTRAINT ck_cand CHECK (cant>=50));

Ex. PRELUCRARE: Sa se calc. si afis. val. tot. pt. fiecare doc. din tabela doc
SQL > UPDATE documente D
SET valoare = 
(
SELECT SUM (cant*pret) valoare FROM proddoc PD, 
produse P 
WHERE P.codp=PD.codp AND D.codd=PD.CODD
GROUP BY D.codd
);

Ex. VIZUALIZARE
SELECT codd, valoare FROM documente
WHERE valoare IS NOT NULL;

rez:
CODD      VALOARE
....      .....
20123        2.250E+09
10123        1.390E+09

MANIPULAREA DATELOR
LMD, fct. de manip. a datelor de cea mai fol. si cea mai bine suportata de SGBD
SGBD-ul manip. datele in mod eficient din generatie in generatie

LMD cu limbaj gazda (cobol, pascal, c), se imbina cu oracle

limbajele relationale (sql) au cele mai bune performante

UTILIZAREA BD
- fct de utilizare asigura interfetele necesare pt comunicarea tuturor utilizatorilor cu bd. SGBD trb sa asigure facilitati
pentru: neinformaticieni, specialisti (informaticieni), administratorul. Neinformaticienii sunt principala categorie a 
beneficiarilor de informatii. SGBD le ofera facilitati de interogare(generatoare, utilitare).

Pt specialistii in info, SGBD ofera elemente de CASE (Computer Aidede Software Engineering)

Administratorul BD organizeaza BD conform unei anumite metodologii, realizeaza schema conceptuala bd, coordoneaza proiecta-
rea bazei de date. Adminul acorda conturi, parole, etc, reface bd in caz de incidente, face analize statistice.

Privilegiile DBA (Database Administrator) - componenta estentiala a managementului BD
1. cont de administrator pentru sistemul de operare
2. Cont de administrator BD
3. Rol de DBA

Moduri de autentificare a DBA:
1. Autentificare folosind SO
2. Autentificare folosind fisierul de parole

Administrarea bd cu ajutorul enterprise manager. 
Pentru a deschide pagina Enterprise Manager se foloseste un browser web








































