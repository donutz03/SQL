Modelare informationala
Modelarea datelor + modelarea proceselor => eliminare detailii & pastrarea aspectelor esentiale

Tipul modelului se stabileste dupa un set de concepte de modelare si o serie de reguli de 
formare.
Conceptele de modelare sunt abstractizari ale unor elemente de structura sau functionalitate ale
sistemului informational. Exemple de concepte utilizate in modelare: surse de date, entitate,
flux de date, proces etc.
Regulile de formare exprima posibilitatile de formare a modelului in raport cu interdependentele
ce exista intre componentele modelului.

Modele de date
Def 1: Un model abstract care descrie modul in care datele sunt reprezentate si accesate
Def 2: Reprezinta o abstractizare matematica a datelor si operatiilor care pot fi efectuate 
asupra lor.

Elemente modele de date
- Structura de date
- Operatorii
- Restrictii de integritate

Structura de date
- Modalitate de stocare a informatiilor intr-un sistem informatic astfel incat acestea sa poata
fi utilizate in mod eficient
- Poate fi definita ca o colectie de date intre care s-au stabilit o serie de relatii care 
conduc la un anumit mecanism de selectie si identificare a componentelor.
- Un tip de structura de date reprezinta o multime ordonata de date intre care s-au stabilit
anumite relatii. Acestea pot fi identificate fie prin nume, fie prin pozitia pe care o ocupa
in cadrul structurii, conform ordinii stabilite in momentul definirii.

Categorii de legaturi:
legaturi de apartenenta a datelor la entitate 
legaturi dintre entitatile de acelasi tip sau de tipuri diferit
Fie 2 clase de entitati Clienti si Produse. Intre datele acestor doua clase de entitati pot
exista urmatoarele relatii:
- multimea de legaturi R2 intre entitatile clasei de Produse, date de faptul ca un produs poate
intra in alcatuirea altui produs;
- multimea de legaturi R2 intre clasele de entitati Clienti si Produse, date de faptul ca un
client poate comanda unul sau mai multe produse, iar un produs poate fi comandat de unul sau
mai multi clienti

Categorii de legaturi:
unare - o entitate intra in asociere cu ea insasi, iar gradul este 1;
binare - doua entitati intra in relatie, iar gradul asocierii este 2;
multiple - participa mai multe entitati la relatie, iar gradul asocierii este mai mare decat 2

Legaturi unare
Multimea de legaturi R2 intre entitatile clasei Produse, date de faptul ca un produs poate 
intra in alcatuirea altui produs.

Asocieri binare
Unu la unu: denumirea unui utilaj are un singur numar de inventar si un numar de inventar este 
asociat unei singure denumiri de utilaj
Denumire utilaj -------------- Numar inventar

Asocieri binare
Unu la mai multi: un utilaj poate face parte dintr-o singura grupa de utilaje, o grupa de utilaje
poate avea mai multe utilaje

Utilaj >>>----------------Grupa de utilaje

Asocieri binare
Mai multi la mai multi: un utilaj este livrat la mai multi clienti, un client primeste mai multe
utilaje
Utilaj>>>----------<<<Clienti

Asocieri Multiple 

tabel istoric functii
tabel functii
tabel angajati
tabel departamente

Operatorii
Actioneaza asuprea structurilor de date pentru operatii de prelucrare: actualizare, consultare,
sortare
Exista si operatori specifici fiecarui model de date
Se implementeaza cu ajutorul LMD

Restrictiile de integritate
Au rolul de a pastra datele corecte, consistente si coerente in procesul de culegere, stocare,
prelucrare, transmitere si extragere a datelor.
Se pot descrie prin LDD, dar nu numai

Tipuri de modele de date
fundamentale: ierarhice, retea, relationale, orientate obiect
derivate: (extinse din cele fundamentale): distribuite, spatiale, multimedia etc

Modelul ierarhic
1. Definirea structurii modelului ierarhic
Definirea entitatilor se face prin notiunea de tip de inregistrare (clasa de entitati) care este 
formata din caracteristici (campuri). Realizarea (instanta) unui tip de inregistrare este data
de ansmblul valorilor pentru campurile acesteia (inregistrarea).

Definirea legaturilor dintre entitati se face fizic si conduce la structura de tip ierarhic 
(arborescent) reprezentata sub forma unei diagrame.

Modelul ierarhic
nivel 0      tip_inreg 0
nivel 1 tip_inreg11 tip_inreg 12 tip_inreg 13
nivel 2 tip_inreg 21 tip_ inreg 22 tip_inreg 23

Caracteristici ale structurii ierarhice (arborescente)
Fiecare nod corespunde unui tip de inregistrare si fiecare drum corespunde unei legaturi 
(asocieri).
Orice acces la un nod se face prin varful ierarhiei, numit radacina, pe o singura cale.
Un nod subordonat (copil) nu poate avea decat un singur superior (parinte).
Un superior poate avea unul sau mai multi subordonati.
Legatura copil-parinte este doar de tip 1:1 (la o realizare copil corespuned o singura
realizare parinte).
Legatura parinte-copil poate fi de tip 1:1 sau 1:M.
In structura exista un singur nod radacina si unul sau mai multe noduri dependete situate pe unul
sau mai multe niveluri.
O ierarhie de tipuri de inregistrari se numeste tip arbore.
O realizare a unui tip arbore este formata dintr-o singura realizare a tipului de inregistrare 
radacina impreuna cu o multime ordonata formata din una sau mai multe realizari ale fiecarui tip
de inregistrare de pe nivelurile inferioare.
Ordonarea realizarilor dintr-un arbore conduce la o secventa ierarhica.

Operatorii modelului ierarhic
- Localizarea unui arbore in BD: se localizeaza o realizare a tiplui de inregistrare radacina
- Trecerea de la un arbore la altul in BD: se trece de la o realizare a tipului inregistrare
radacina (secventa ierarhica) la o alta realizare a aceluiasi tip inregistrare radacina.
- Trecerea de la o realizare (inregistrare) la alta intr-un arbore (secventa ierarhica) :
se poate face trecerea pe acelasi nivel sau pe niveluri diferite intre tipuri de inregistrari 
legate intre ele.
- Actualizarea intr-un arbore : adaugarea, modificarea sau stergerea unei inregistrari. 
Operatia este greoaie si consumatoare de resurse calculator (spatiu si timp) pentru ca antrenea-
za automat toate inregistrarile din arbore care se inlantuie cu inregistrarea actualizata. 
Nota. Operatorii de mai sus sunt la nivel de inregistrare-actioneaza pe o inregistrare si 
produce tot o inregistrare.
Exista si operatori la nivel de multime de inregistrari care se implementeaza in LMD mult mai
greu.

Restrictiile de integritate ale modelului ierarhic
- o realizare subordonat este totdeauna asociata unei singure realizari superior
- daca un tip de inregistrare nu are realizari atunci nici tipurile de inregistrari descendente
nu au realizari
Nota.
Efectele restrictiilor de integritate sunt:
completarea operatiei de actualizare;
daca o realizare a unui nod subordonat trebuie sa fie asociata cu mai multe realizari ale no-
dului parinte atunci ea trebuie multiplicata (creste redundanta)
- dau logica si coerenta modelului arborescent

Caracterizarea modelului ierarhic
- a fost propus de catre IBM si a fost primul util. pt BD
- str. modelului este graf orientat
- implementarea modelului se face fizic si conditioneaza performantele BD:
1. prin pointeri utilizand liste simplu inlantuite, vectori de pointeri, chei primare
2. secvential, fiecare realizare a unui arbore corespunde unei inregistrari logice dintr-un
fisier secvential
Modelul se aplica cu succes in tehnologia constructiilor de masini, dar si in alte domenii.

Limitele modelului ierarhic:
- nr de ierarhii posibile creste combinatoric cu nr inregistrarilor, in legatura parinte-copil
- actualizarea datelor e greoaie si consumatoare de resurse de calculator
- nu se poate realiza legatura de tip M:N
EX de SGBD ierarhic este IMS = INFORMATION MANAGEMENT SYSTEM realizat de catre IBM
BD ierarhica = o multime ordonata de realizari ale unui tip arbore

Definirea structurii modelului retea
Definirea entitatilor se face prin notiunea de tip de inregistrare, care este formata din
caracteristici (campuri)
Realizarea (instanta) unui tip de inregistrare este data de ansamblul valorilor pentru cam-
purile acestuia (inregistrarea).
Definirea legaturilor dintre entitati se face fizic si conduce la o structura de tip retea,
reprezentata sub forma unei diagrame numita si schema (conceptuala).

Exemplu de structura de retea
tip_inreg 1 <->tip_inreg 3...

Caracteristici ale structurii retea
- un nod poate avea oricati superiori si oricati subordonati
- pot exista mai multe tip de inregistrare radacina
- la un subordonat se poate ajunge pe mai multe cai
- este o extensie a structurii arborescente in care graful nu mai este limitat
- legaturile in model pot fi 1:1, 1:M, M:N, ciclice
- pentru exprimarea legaturilor se foloseste conceptul de tip set. Un tip set este format
dintr-un singur tip de nod proprietar si unul sau mai multe tipuri de nod membre dependente
de cel proprietar
- o realizare a tipului set este o colectie de inregistrari care are o realizare proprietar si
un numar de realizari membre asociate

Operatorii modelului de retea
Localizarea unui tip set: se identifica o realizare a unui nod proprietar.
Trecerea de la o inregistrare la alta in cadrul unui set: adaugarea, modificarea, stergerea
unor membri
Actualizarea intr-un set: adaugarea, modificarea, stergerea unor membri.
Actualizarea intr-o retea: adaugarea, modificarea, stergerea unor seturi,

Nota. Operatiile de actualizare (groaie si mari consumatoare de resurse calculator, deoarece
sunt antrenate intotdeauna inregistrarile dintr-unul sau mai multe seturi).
Localizarea unei inregistrari pe baza valorii unui camp (cheie).

Restrictiile de integritate ale modelului de retea
O inregistrare nu poate fi membra a doua realizari ale aceluiasi tip set. Inregistrarea se va
multiplica. O inregistrare poate sa apartina mai multor tipuri set prin multiplicare. Un tip
de inregistrare poate fi nod proprietar intr-un set si nod membru in alt set. Un set poate
avea un singur nod proprietar. Nota. Efectele restrictiilor de integritate sunt: dau logica 
si coerenta modelului de retea, complica operatia de actualizare, introduce o redundanta con-
trolata.

Caracteristicile modelului retea
A fost propus de CODASYL ca solutie pt eliminarea limitelor modelului ierarhic. Permite repre-
zentarea unor structuri cmoplexe si are aplicabilitate in domenii variate din lumea reala.
Implementarea modelului se face fizic si conditioneaza performantele BD: prin pointeri struc-
turati in liste inlantuite de diferite tipuri (owner, prior, next); prin harta de biti (matrice
cu inregistrari, iar la intersectie sunt legaturile 1-da, 0-nu). Limitele modelului de retea:
complexitatea modelului il face dificil de implementat; legaturile din model nu sunt intotdea-
una foarte clare; prelucrarea inregistrarilor se face secvential; actualizarea este greoaie 
si consumatoare de resurse calculator; reproiectarea este dificila datorita complexitatii 
ridicate. Exemple de SGBD retea: IDMS = Integrated Databse management system, socrate
BD retea - o multime oarecare de tipuri de inregistrari structurate pe tipuri set.

Definirea structurii modelului relational
Definirea colectiilor de date se face sub forma unor tablouri bidimensionale numite tabele sau
relatii de date. Conceptele utilizate sunt:
Domeniu = un ansamblu de valoric aracterizat printr-un nume. El poate fi explicit (se enumera 
valorile posibile D1:{M, F}) sau implicit (se precizeaza proprietatile valorile D1: {a/a 
apartine N}). TABELA/RELATIA = un subansamblu al produsului cartezian al mai multor domenii,
caracterizat printr-un nume. ATRIBUTUL = coloana unei tabele, caracterizata printr-un nume.
TUPLUL = linia dintr-o tabela si nu are nume. Nota. Ordinea liniilor (tupluri) si coloanelor
(atribute) dintr-o tabela nu trebuie sa prezinte nicio importanta. SCHEMA TABELEI = numele
tabelei, urmat intre paranteze rotunde de lista atributelor, iar pentru fiecare atribut se
precizeaza domeniul asociat.
CHEIA = un atribut sau un ansamblu de atribute care au rolul de a identifica un tuplu dintr-o
tabela. Tipuri de chei: primare/alternate, simple/comune, externe.
SCHEMA RELATIONALA = schema tabelei + cheile + restrictiile de integritate.

Definirea structurii modelului relational
Definirea legaturilor dintre entitati se face logic construind asocieri intre tabele cu 
ajutorul unor atribute de legatura
Legaturile se pot reprezenta sub forma unei diagrame de structura numita si schema BD.

Definirea structurii modelului relational-caracteristici
Atributele implicate in realizarea legaturilor se gasesc fie in tabelele asociate, fie in 
tabele distincte construite special pentru legaturi. Atributul din tabela initiala se numeste
cheie externa iar cel din tabela finala cheie primara. Legaturile posibile sunt 1:1, 1:M, M:N. 
Potential, orice tabela se poate lega cu orice tabela, dupa orice atribute. Legaturile se sta-
bilesc la momentul descrierii datelor (prin LDD) cu ajutorul restrictiilor de integritate.
Practic se stabilesc si legaturi dinamice la momentule executiei.

Operatorii modelului relational
Operatori din algebra relationala: standard: selectia, proiectia, jonctiunea, reuniunea,
diferenta, produsul cartezian, intersectia, diviziunea;
extensii: complementarea, descompunerea (splitarea) etc.
Operatorii algebrei relationale actioneaza la nivel de tabela in expresii relationale. Operanzii
sunt tabele iar rezultatul este intotdeauna o tabela.
Operatorii din calculul relational: orientati pe tuplu: conectivele (conjunctia = capul unei sa-
geti in sus = ^ , disjunctia = capul unei sageti in jos, negatia = |), cuantificatorii
(existenta = E in oglinda, universal = oricare ar fi = A intors);
orientati pe domeniu: idem ca mai sus
Pentru operatorii calcului relational operandul poate fi tuplu sau domeniu.

Restrictiile de integritate ale modelului relational
Structurale = se definesc prin compararea unor valori din tabele: cheie unica = intr-o tabela
nu trebuie sa existe mai multe tupluri cu aceeasi valoare pentru ansamblul cheie;
referentiala = intr-o tabela T1 care refera o tabela T2, valorile cheii externe trebuie sa
figureze printre valorile cheii primare din T2 sau sa ia valoare NULL (neprecizat)
entitatii = intr-o tabela, atributele din cheia primara nu trebuie sa ia valoare NULL
Nota. Cele 3 restrictii de mai sus sunt minimale. Pe langa acestea, exista o serie de alte
restrictii structurale care se refera la dependentele dintre dateȘ functionale, multivaloare,
jonctiune etc. (sunt luate in considerare la tehnicile de proiectare BDR).

Restrictiile de integritate ale modelului relational
Semantice = se definesc prin comportamentul datelor si tin cont de valorile din BD: restrictia
de domeniu = domeniul corespunzator unui atribut dintr-o tabela trebuie sa se incadreze intre
anumite valori;
restrictii temporare = valorile anumitor atribute se compara cu niste valori temporare (rezul-
tate din calcule etc).
Nota. Restrictiile semantice fiind foarte generale se gestioneaza fie la momentul descrierii 
datelor (ex. clauza CHECK), fie in afara modelului la momentul executiei (ex. instructiunea IF).

Caracteristicile modelului relational
- propus de IBM, trecere la noua generatie
- e simplu, e bazat pe teoria seturilor (ansamblurilor) si pe logica matematiac
- pot fi reprez. toate tipurile de structuri de date de mare complexitate, din diferite domenii
de activitate
- implementarea modelului il face dificil de aplicat pentru noile tipuri de aplicatii (multi-
media, internet etc).
- nu asigura o independenta logica totala a datelor de aplicatie;
- pentru aplciatii de volum si complexitate f mari nu mai face fata
- poate introduce o redundanta prea mare (la proiectare prin tehnica de normalizare)
Baza de date relationala = un ansamblu de tabele prin care se reprezinta atat datele cat si 
legaturile dintre ele.

Definirea structurii modelului orientat obiect (OO)
Definirea obiectelor se face cu ajutorul conceptului de clasa de obiecte, care este definita
din entitatea regasita in lumea reala. Se pune accentul atat pe date cat si pe comportamentul
acestora, ambele incapurate in obiect. Conceptele utilizate sunt: CLASELE (TIPURILE) DE OBIECTE
= un tip abstract de date prin care se defineste structura obiectelor (proprietatile) si compor-
tamentul (metodele) acestora.
OBIECTELE =o colectie de proprietati care se refera la aceeasi entitate.
Obiectul are:
- un nume prin care e referit;
- un identificator unic atribuit de sistem;
- o implementare care este privata;
- o interfata care este publica;
METODA = operatiile permise asupra obiectului, deci comportamentul (functionalitatea) acestuia.
MESAJUL = cereri adresate obiectelor pentru a returna o valoare sau o stare.
CARACTERISTICI (principii) fundamentale ale obiectelor:
- incapsularea = descrierea obiectelor se face astfel incat nu se poate avea acces din afara 
obiectului la datele sale;
- polimorfismul = diferite obiecte pot raspunde diferit la aceleasi mesage;
- mostenirea = capacitatea unui obiect de a-si deriva datele si functionalitatea din alt obiect.

INSTANTA unei clase = realizarea unei clase data de valorile variabilelor aferente.

Definirea structurii modelului orientat obiect (OO)
Definirea legaturilor intre obiecte se realizeaza implicit prin modul de construire (definire) 
al obiectelor. Tipurile de legaturi in modelul OO sunt:
1. Ierarhice, caracterizate prin: clasa de obiecte este structura de baza a modelului, fiecare
obiect are un identificator unic; toate obiectele sunt membri ai unei clase; clasele sunt 
structurate in ierarhii avand caracteristica de mostenire; prin obiecte se pot defini orice
tip de date (text, grafic, imagine, sunet, video); ansamblul claselor de obiecte structurate
in ierarhii alcatuiesc schema BD.
De referinta caracterizate prin: se realizeaza pe baza identificatorului unic obiect; pot fi
de urmatoarele feluri: simple, de asociere, de compunere (tip parte-intreg), de agregare. 
Obiectele compuse rezultate au o structura ierarhica dar nu au caracteristica de mostenire;

Operatorii modelului OO
La baza operatiilor din model stau mesajele ca unic mod de a comunica obiectele intre ele.
Actualizarea metodelor (adaugare, modificare, stergere de metode). Actualizarea proprieta-
tilor (adaugare, modificare, stergere de date). Actualizarea claselor (adaugare, modificare,
stergere de clase). Realizarea legaturilor intre clase (compunere, partitionare). Actualizarea
instantelor, prin metode care schimba starea interna a obiectului.

Restrictiile de integritate ale modelului OO
Orice obiect trebuie sa respecte restrictiile impuse la definirea clasei din care face parte
(protocol de obiect).
identificatorul obiectului asigura integritatea referirii la el (se atribuie si se sterge 
automat o data cu obiectul).
Accesul la obiecte este limitat la folosirea protocolului de mesaje definit pentru clasa din
care face parte obiectul.

Caracteristicile modelului OO
Modelul OO marcheaza trecerea la o a treia generatie de BD. El aduce bazelor de date un plus de 
deschidere, independenta logica a datelor de aplicatii, reutilizarea obiectelor. Modelul OO da 
bune rezultate pt probleme foarte mari si complexe (principiile complexitatii sunt incluse in 
model). In structura sunt acceptate toate tipurile de date cunoscute, deci se poate aplica
pentru toate domeniile de activitate. Limitele modelului OO: nu exista un model OO unanim
acceptat de specialisti. Exista totusi organisme internationale de standardizare - exemplu
OMG (Object Management Group) - precum si modele OO standardizate - ODMG (Object Data Management
Group); imaturitatea si naturaletea dezarmata a tehnologiei OO; elemente inca insuficient testa-
te pentru SBDOO: controlul integritatii, volume foarte mari, regasirea.
Exxemple de SGBDOO: O2(Franta), Jasmine (SUA).
Baza de date orientata obiect = o multimem de clase de obiecte persistente in memoria externa, 
organizata coerent is ordonata in ierarhii, partajata pentru utilizatorii concurenti.





















